# -*- coding: utf-8 -*-
"""GradCap_Final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18U5e0Zaouhf6_SCP7R93LWYhKXA-x8ti
"""

import spacy.cli
# spacy.cli.download("en_core_web_lg")

import spacy
from spacy import displacy
from googletrans import Translator
from datetime import datetime

nlp = spacy.load("en_core_web_lg")
translator = Translator()

def hindiToEnglish(data):
  dt = translator.translate(data).text
  return dt

def name(data):
  data1 = data
  text= nlp(data1)
  lst=[]
  
  for word in text.ents:
    if(word.label_ == 'PERSON'):
      lst=((word.text.title()).split())
  for x in text:
    if(x.pos_=='NOUN' and str(x).capitalize() not in lst):
      lst.append(str(x).capitalize())
  
  sentence = " ".join(lst)
  return sentence

def org(data):
  data1 = data
  text= nlp(data1)
  for word in text.ents:
    if(word.label_ == 'ORG'):
      return word.text.capitalize()

def date_str(data):
  data1 = data
  text= nlp(data1)
  for word in text.ents:
    if(word.label_ == 'DATE' or word.label_ == 'CARDINAL'):
      return word.text


def date(txt):
  txt = date_str(txt)
  
  if("th" in txt):
      txt = txt.replace('th', '')
  if("of" in txt):
      txt = txt.replace('of', '')

  try:
    date_obj = datetime.strptime(txt, "%B %d %Y")
  except Exception as e:
    date_obj = datetime.strptime(txt, "%d %B %Y")
    ddmmyy_format = date_obj.strftime("%d/%m/%y")
    return(ddmmyy_format)
  else:
    ddmmyy_format = date_obj.strftime("%d/%m/%y")
    return(ddmmyy_format)

def location(data):
  data1 = data
  text= nlp(data)
  for word in text.ents:
    if(word.label_ == 'GPE'):
      return word.text.capitalize()